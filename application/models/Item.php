<?php
defined('BASEPATH') or exit('');

/**
 * Description of Customer
 *
 * @author Amir <amirsanni@gmail.com>
 * @date 4th RabThaani, 1437AH (15th Jan, 2016)
 */
class Item extends CI_Model
{
    public function __construct()
    {
        parent::__construct();
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public function getAll($orderBy, $orderFormat, $start = 0, $limit = '')
    {
        $this->db->select('items.*, categories.category_name AS category_name, manufacturers.mnf_name AS manufacturer_name, admin.first_name AS adminName');
        $this->db->from('items');
        $this->db->join('categories', 'categories.id = items.categoryId', 'left');
        $this->db->join('manufacturers', 'manufacturers.id = items.mnfId', 'left');
        $this->db->join('admin', 'admin.id = items.adminId', 'left'); // <-- corrected here
        $this->db->order_by("items.$orderBy", $orderFormat);

        if (!empty($limit)) {
            $this->db->limit($limit, $start);
        }

        $query = $this->db->get();
        log_message('debug', "SQL Query: " . $this->db->last_query());

        return ($query->num_rows() > 0) ? $query->result() : false;
    }




    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */


    /**
     * 
     * @param type $itemName
     * @param type $itemQuantity
     * @param type $itemPrice
     * @param type $itemDescription
     * @param type $itemCode
     * @return boolean
     */
    public function add($itemName, $itemQuantity, $itemPrice, $itemDescription, $itemCode, $itemCategory, $itemMnf)
    {
        $data = [
            'name' => $itemName,
            'quantity' => $itemQuantity,
            'unitPrice' => $itemPrice,
            'description' => $itemDescription,
            'code' => $itemCode,
            'categoryId' => $itemCategory,
            'mnfId' => $itemMnf,
            'adminId' => $this->session->admin_id  // <-- Add this line
        ];

        // Set created datetime
        $this->db->platform() == "sqlite3"
            ? $this->db->set('dateAdded', "datetime('now')", FALSE)
            : $this->db->set('dateAdded', "NOW()", FALSE);

        $this->db->insert('items', $data);

        return $this->db->insert_id() ?: FALSE;
    }



    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * 
     * @param type $value
     * @return boolean
     */
    public function itemsearch($value)
    {
        $escapedValue = $this->db->escape_like_str($value);

        $q = "
        SELECT items.*, 
               categories.category_name AS category_name, 
               manufacturers.mnf_name AS manufacturer_name, 
               admin.first_name AS adminName
        FROM items 
        LEFT JOIN categories ON items.categoryId = categories.id 
        LEFT JOIN manufacturers ON items.mnfId = manufacturers.id
        LEFT JOIN admin ON items.adminId = admin.id
        WHERE 
            items.name LIKE '%{$escapedValue}%'
            OR items.code LIKE '%{$escapedValue}%'
            OR items.description LIKE '%{$escapedValue}%'
            OR categories.category_name LIKE '%{$escapedValue}%'
            OR manufacturers.mnf_name LIKE '%{$escapedValue}%'
            OR admin.first_name LIKE '%{$escapedValue}%'
    ";

        $run_q = $this->db->query($q);

        return $run_q->num_rows() > 0 ? $run_q->result() : FALSE;
    }




    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * To add to the number of an item in stock
     * @param type $itemId
     * @param type $numberToadd
     * @return boolean
     */
    public function incrementItem($itemId, $numberToadd)
    {
        $q = "UPDATE items SET quantity = quantity + ? WHERE id = ?";

        $this->db->query($q, [$numberToadd, $itemId]);

        if ($this->db->affected_rows() > 0) {
            return TRUE;
        } else {
            return FALSE;
        }
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    public function decrementItem($itemCode, $numberToRemove)
    {
        $q = "UPDATE items SET quantity = quantity - ? WHERE code = ?";

        $this->db->query($q, [$numberToRemove, $itemCode]);

        if ($this->db->affected_rows() > 0) {
            return TRUE;
        } else {
            return FALSE;
        }
    }


    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */


    public function newstock($itemId, $qty)
    {
        $q = "UPDATE items SET quantity = quantity + $qty WHERE id = ?";

        $this->db->query($q, [$itemId]);

        if ($this->db->affected_rows()) {
            return TRUE;
        } else {
            return FALSE;
        }
    }


    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    public function deficit($itemId, $qty)
    {
        $q = "UPDATE items SET quantity = quantity - $qty WHERE id = ?";

        $this->db->query($q, [$itemId]);

        if ($this->db->affected_rows()) {
            return TRUE;
        } else {
            return FALSE;
        }
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * 
     * @param type $itemId
     * @param type $itemName
     * @param type $itemDesc
     * @param type $itemPrice
     */
    public function edit($itemId, $itemName, $itemDesc, $itemPrice, $itemCategory, $itemMnf)
    {
        $data = [
            'name' => $itemName,
            'unitPrice' => $itemPrice,
            'description' => $itemDesc,
            'categoryId' => $itemCategory,
            'mnfId' => $itemMnf
        ];

        $this->db->where('id', $itemId);
        $this->db->update('items', $data);

        return TRUE;
    }


    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    public function getActiveItems($orderBy, $orderFormat)
    {
        $this->db->order_by($orderBy, $orderFormat);

        $this->db->where('quantity >=', 1);

        $run_q = $this->db->get('items');

        if ($run_q->num_rows() > 0) {
            return $run_q->result();
        } else {
            return FALSE;
        }
    }


    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * array $where_clause
     * array $fields_to_fetch
     * 
     * return array | FALSE
     */
    public function getItemInfo($where_clause, $fields_to_fetch)
    {
        $this->db->select($fields_to_fetch);

        $this->db->where($where_clause);

        $run_q = $this->db->get('items');

        return $run_q->num_rows() ? $run_q->row() : FALSE;
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    public function getItemsCumTotal()
    {
        $this->db->select("SUM(unitPrice*quantity) as cumPrice");

        $run_q = $this->db->get('items');

        return $run_q->num_rows() ? $run_q->row()->cumPrice : FALSE;
    }

    public function getItemByName($name)
    {
        $this->db->where('name', $name);
        $query = $this->db->get('items'); // change table name if needed
        return $query->row_array();
    }
}
